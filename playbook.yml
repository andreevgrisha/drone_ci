---
# Playbook for run Drone Server & Runner in docker containers

- hosts: grilab.io
  connection: local
  become: yes

  roles:
      - role: docker-check

  tasks:
      - name: up drone-server docker container
        docker:
          name: drone-server
          image: drone/drone:1
        volumes: 
            - /var/lib/drone:/data
            - /var/run/docker.sock:/var/run/docker.sock
        env_file:
            - ./.env
        environment:
            - DRONE_GITLAB_SERVER=http://grilab.io
            - DRONE_GITLAB_CLIENT_ID=${APP_ID}
            - DRONE_GITLAB_CLIENT_SECRET=${SCRT}
            - DRONE_RPC_SECRET=${SH_SCRT}
            - DRONE_SERVER_HOST=grilab.io:8880
            - DRONE_SERVER_PROTO=http
            - DRONE_USER_CREATE=username:andreevgrisha,admin:true
            - DRONE_LOGS_DEBUG=true
            - DRONE_RUNNER_NETWORKS=drone_ci_default
        ports:
            - "8880:80"
        restart: always
        extra_hosts:
            - "grilab.io:${GRILAB_IP}" 

      - name: up drone-runner docker container
        docker:
          name: drone-runner
          image: drone/drone-runner-docker:1
        volumes: 
            - /var/lib/drone:/data
            - /var/run/docker.sock:/var/run/docker.sock
        env_file:
            - ./.env
        environment:
            - DRONE_RPC_SECRET=${SH_SCRT}
            - DRONE_RPC_HOST=drone-server
            - DRONE_RPC_PROTO=http
            - DRONE_RUNNER_CAPACITY=2
            - DRONE_RUNNER_NAME=${HOSTNAME}
            - DRONE_UI_USERNAME=${DR_SCRT}
            - DRONE_UI_PASSWORD=${DR_SCRT}
            - DRONE_RUNNER_NETWORKS=drone_ci_default
        ports:
            - "3001:3000"
        restart: always
        extra_hosts:
            - "grilab.io:${GRILAB_IP}"
